version: '3.8'

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: moa-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1118
      MYSQL_DATABASE: moa
      TZ: Asia/Seoul
      # MySQL 인코딩 환경변수 (8.0 버전용)
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      # 데이터 영속성
      - mysql_data:/var/lib/mysql
      # MySQL 설정 파일 마운트
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
      # SQL 초기화 스크립트 (UTF-8로 실행되도록 설정)
      # - ./sql_test:/docker-entrypoint-initdb.d:ro
    networks:
      - moa-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p1118"]
      interval: 10s
      timeout: 5s
      retries: 5
    # UTF-8 설정 명령어 (가장 강력한 설정)
    command: >
      mysqld
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --skip-character-set-client-handshake
      --init-connect='SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci'

  # Redis 캐시 서버
  redis:
    image: redis:7-alpine
    container_name: moa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - moa-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Tomcat + Spring Application
  tomcat:
    image: tomcat:9-jdk17
    container_name: moa-tomcat
    ports:
      - "8080:8080"
    volumes:
      # WAR 파일을 ROOT.war로 복사하여 배포
      - ./build/libs:/tmp/wars:ro
      # Firebase 키 파일 마운트 (있는 경우에만)
      - ./src/main/resources/firebase:/usr/local/tomcat/firebase
      # Docker 환경용 설정 파일
      - ./src/main/resources/application-docker.properties:/usr/local/tomcat/conf/application.properties:ro
    environment:
      # JVM 메모리 설정 및 인코딩 설정
      JAVA_OPTS: "-Xms512m -Xmx1024m -Dfile.encoding=UTF-8 -Duser.language=ko -Duser.country=KR"
      # 타임존 설정
      TZ: Asia/Seoul
      # Spring 프로필 설정 (docker 프로필 사용)
      SPRING_PROFILES_ACTIVE: docker
      # 언어 및 인코딩 설정
      LANG: ko_KR.UTF-8
      LC_ALL: ko_KR.UTF-8
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - moa-network
    # WAR 파일을 ROOT.war로 복사하는 스크립트 실행
    command: >
      sh -c "
        echo '========================================' &&
        echo 'Starting Tomcat deployment process...' &&
        echo '========================================' &&
        echo 'Clearing webapps directory...' &&
        rm -rf /usr/local/tomcat/webapps/* &&
        echo 'Finding WAR file in /tmp/wars...' &&
        ls -la /tmp/wars/ &&
        WAR_FILE=$$(find /tmp/wars -name '*.war' -type f | head -1) &&
        if [ -z \"$$WAR_FILE\" ]; then
          echo 'ERROR: No WAR file found in build/libs directory!';
          echo 'Please run: ./gradlew clean build -x test';
          exit 1;
        fi &&
        echo \"Found WAR file: $$WAR_FILE\" &&
        echo 'Copying to ROOT.war...' &&
        cp \"$$WAR_FILE\" /usr/local/tomcat/webapps/ROOT.war &&
        echo 'WAR file deployed successfully!' &&
        echo 'Starting Tomcat...' &&
        catalina.sh run
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  moa-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
